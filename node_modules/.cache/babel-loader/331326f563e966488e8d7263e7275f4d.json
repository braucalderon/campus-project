{"ast":null,"code":"var _jsxFileName = \"/Volumes/Seagate/Desktop/ttp2021/campus-project/src/Components/EditStudent/formStudent.js\";\nimport React, { useState } from \"react\";\nimport { db } from \"../Firebase/firebase\";\n\nconst StudentForm = _ref => {\n  let {\n    idBoolean,\n    emplidId\n  } = _ref;\n  // IdBoolean connected to editStudent component\n  const [name, setName] = useState(\"\");\n  const [emplid, setEmplid] = useState('');\n  const [campus, setCampus] = useState(\"\");\n  const [copyEmplid, setCopyEmplid] = useState('');\n  const [enrollment, setEnrollment] = useState('yes');\n  const [studentMessage, setStudentMessage] = useState(false);\n\n  const onChangeHandlerName = event => {\n    const nValue = event.target.value;\n    setName(nValue);\n  };\n\n  const onChangeHandlerCampus = event => {\n    const cValue = event.target.value;\n    setCampus(cValue);\n  };\n\n  const onChangeHandlerEmplid = event => {\n    const eValue = event.target.value;\n    setEmplid(eValue);\n    setCopyEmplid(eValue);\n  };\n\n  const onChangeHandlerEnrollment = event => {\n    const enValue = event.target.value;\n    setEnrollment(enValue);\n  };\n\n  const onClickHandlerSubmit = event => {\n    event.preventDefault();\n    const snapShot = db.doc(`campus/student:${emplid}`); // const ref = snapShot.get();\n    // console.log(snapShot);\n    // iterates thru the all the documents in cloud firestore\n\n    snapShot.get().then(doc => {\n      if (!doc.exists) {\n        snapShot.set({\n          Name: name,\n          Campus: campus,\n          Emplid: emplid,\n          Enrollment: enrollment\n        });\n        alert(\"New Submission has been successful\");\n        reset();\n        setStudentMessage(false);\n      } else {\n        setStudentMessage(true);\n        reset();\n      }\n    });\n  };\n\n  const onClickHandlerEdit = event => {\n    event.preventDefault();\n    const snapShot = db.doc(`campus/student:${emplidId}`); // console.log(emplid);\n\n    snapShot.update({\n      \"Campus\": campus,\n      \"Name\": name,\n      \"Enrollment\": enrollment\n    }).then(() => {\n      alert(`Student ${name} with emplid ${emplidId} has been updated successfully`);\n      reset();\n    });\n  };\n\n  const reset = () => {\n    setCampus(\"\");\n    setEmplid(\"\");\n    setName(\"\");\n    setEnrollment(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      width: '50vh'\n    },\n    onSubmit: idBoolean ? onClickHandlerSubmit : onClickHandlerEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      fontSize: \"3vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Student Form\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Student Name\",\n    onChange: onChangeHandlerName,\n    value: name,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"campus\",\n    placeholder: \"Enter Campus\",\n    onChange: onChangeHandlerCampus,\n    value: campus,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), idBoolean ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"emplid\",\n    placeholder: \"Enter Student ID\",\n    onChange: onChangeHandlerEmplid,\n    value: emplid,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"emplid\",\n    placeholder: \"Enter Student ID\",\n    defaultValue: emplidId,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Enrollment\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"enrollmment\",\n    onChange: onChangeHandlerEnrollment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Choose an Option\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"yes\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"no\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, studentMessage ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, `Student ID ${copyEmplid} is already in the system`) : null)));\n};\n\nexport default StudentForm;","map":{"version":3,"sources":["/Volumes/Seagate/Desktop/ttp2021/campus-project/src/Components/EditStudent/formStudent.js"],"names":["React","useState","db","StudentForm","idBoolean","emplidId","name","setName","emplid","setEmplid","campus","setCampus","copyEmplid","setCopyEmplid","enrollment","setEnrollment","studentMessage","setStudentMessage","onChangeHandlerName","event","nValue","target","value","onChangeHandlerCampus","cValue","onChangeHandlerEmplid","eValue","onChangeHandlerEnrollment","enValue","onClickHandlerSubmit","preventDefault","snapShot","doc","get","then","exists","set","Name","Campus","Emplid","Enrollment","alert","reset","onClickHandlerEdit","update","display","flexFlow","width","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { db } from \"../Firebase/firebase\";\n\nconst StudentForm = ({ idBoolean, emplidId }) => {\n  // IdBoolean connected to editStudent component\n  const [name, setName] = useState(\"\");\n  const [emplid, setEmplid] = useState('');\n  const [campus, setCampus] = useState(\"\");\n  const [copyEmplid, setCopyEmplid] = useState('');\n  const [enrollment, setEnrollment] = useState('yes');\n  const [studentMessage, setStudentMessage] = useState(false);\n  \n\n  const onChangeHandlerName = (event) => {\n    const nValue = event.target.value;\n    setName(nValue);\n  };\n  const onChangeHandlerCampus = (event) => {\n    const cValue = event.target.value;\n    setCampus(cValue);\n  };\n  const onChangeHandlerEmplid = (event) => {\n    const eValue = event.target.value;\n    setEmplid(eValue);\n    setCopyEmplid(eValue)\n  };\n  const onChangeHandlerEnrollment = (event) => {\n    const enValue = event.target.value;\n    setEnrollment(enValue);\n  };\n\n  const onClickHandlerSubmit = (event) => {\n    event.preventDefault();\n    const snapShot = db.doc(`campus/student:${emplid}`);\n    // const ref = snapShot.get();\n    // console.log(snapShot);\n    // iterates thru the all the documents in cloud firestore\n    snapShot.get().then((doc) => {\n      if (!doc.exists) {\n        snapShot.set({\n          Name: name,\n          Campus: campus,\n          Emplid: emplid,\n          Enrollment: enrollment,\n        });\n        alert(\"New Submission has been successful\");\n        reset();\n        setStudentMessage(false);\n      } else {\n        setStudentMessage(true);\n        reset();\n      }\n    });\n  };\n  const onClickHandlerEdit = (event) => {\n    event.preventDefault();\n    const snapShot = db.doc(`campus/student:${emplidId}`);\n    // console.log(emplid);\n    snapShot.update({\n      \"Campus\": campus,\n      \"Name\": name,\n      \"Enrollment\": enrollment,\n    }).then(() => {\n      alert(`Student ${name} with emplid ${emplidId} has been updated successfully`)\n      reset();\n    })\n\n  };\n  const reset = () => {\n    setCampus(\"\");\n    setEmplid(\"\");\n    setName(\"\");\n    setEnrollment(\"\");\n  };\n  \n\n  return (\n    <React.Fragment>\n      <div>\n        <form\n          style={{ display: \"flex\", flexFlow: \"column\", width: '50vh' }}\n          onSubmit={idBoolean ? onClickHandlerSubmit : onClickHandlerEdit}\n        >\n          <label style={{ fontSize: \"3vh\" }}>Student Form</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Student Name\"\n            onChange={onChangeHandlerName}\n            value={name}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"campus\"\n            placeholder=\"Enter Campus\"\n            onChange={onChangeHandlerCampus}\n            value={campus}\n            required\n          />\n          {idBoolean ? (\n            <input\n              type=\"text\"\n              name=\"emplid\"\n              placeholder=\"Enter Student ID\"\n              onChange={onChangeHandlerEmplid}\n              value={emplid}\n              required\n            />\n          ) : (\n            <input\n              type=\"text\"\n              name=\"emplid\"\n              placeholder=\"Enter Student ID\"\n              defaultValue={emplidId}\n              disabled\n              \n            />\n          )}\n\n          <label>Enrollment</label>\n          <select name=\"enrollmment\" onChange={onChangeHandlerEnrollment} >\n            <option>Choose an Option</option>\n            <option value=\"yes\">yes</option>\n            <option value=\"no\">no</option>\n  \n          </select>\n          <input type=\"Submit\" />\n        </form>\n\n        <div>\n          {studentMessage ? <h3>{`Student ID ${copyEmplid} is already in the system`}</h3> : null}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default StudentForm;\n"]},"metadata":{},"sourceType":"module"}